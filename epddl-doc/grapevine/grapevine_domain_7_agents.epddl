(define (domain grapevine_a7)
  (:types agent secret room)
  (:predicates  (at ?ag - agent ?r - room)
                (the ?se - secret)
  )
   
  (:action left
   :category (ontic)
   :parameters (?ag - agent)
   :precondition (K_?ag (at ?ag p2))
   :effect (
            <{True} { and (K_?ag(at ?ag p1)) (K_?ag(not(at ?ag p2)))
                          (at ?ag p1) (not(at ?ag p2)) }>
          )
  )

  (:action right
   :category (ontic)
   :parameters (?ag - agent)
   :precondition (K_?ag (at ?ag p1))
   :effect (
            <{True} { and (K_?ag(at ?ag p2)) (K_?ag(not(at ?ag p1)))
                          (at ?ag p2) (not(at ?ag p1))}>
          )
  )
  
  (:action share
   :category (communication)
   :parameters (?ag - agent ?x - agent ?y - agent ?p - agent ?q - agent ?r - agent ?s -agent ?rk - room ?rj - room)
   :precondition (and (K_?ag (at ?ag ?rk)) (K_?ag (the ?ag))
                 )
   :effect (                     
            <{and (at ?x ?rk)    
                  (at ?y ?rj)
                  (at ?p ?rk)  
                  (at ?q ?rk)  
                  (at ?r ?rk)  
                  (at ?s ?rk)         
             }                   
             {and 
             (K_?x (the ?ag))
             (K_?p (the ?ag))
             (K_?q (the ?ag)) 
             (K_?r (the ?ag)) 
             (K_?s (the ?ag))                      
             } > 

            <{and 
                  (at ?x ?rj)  
                  (at ?y ?rj)
                  (at ?p ?rk)  
                  (at ?q ?rk)  
                  (at ?r ?rk)  
                  (at ?s ?rk)               
             }

             {and           
             (K_?p (the ?ag))
             (K_?q (the ?ag)) 
             (K_?r (the ?ag)) 
             (K_?s (the ?ag))   
             } 
            >

            <{and 
                  (at ?x ?rj)  
                  (at ?y ?rj)
                  (at ?p ?rj)  
                  (at ?q ?rk)  
                  (at ?r ?rk)  
                  (at ?s ?rk)               
             }

             {and           
             (K_?q (the ?ag)) 
             (K_?r (the ?ag)) 
             (K_?s (the ?ag))   
             } 
            >
          )
  )

)
