(define (problem hexa4)

	(:domain hexa3)

	(:objects
		red
		blue
		pink
		white - card
	)

	(:agents
		a
		b
		c
		d
	)

	(:init (K_a (or (and (own a red) (own b white) (not (own b blue)) (not (own b pink))
									 (own d blue) (not (own d white)) (not (own d pink))
									 (own c pink) (not (own c white)) (not (own c blue))
					)
					(and (own a red) (own c white) (not (own c blue)) (not (own c pink))
									 (own b blue) (not (own b white)) (not (own b pink))
									 (own d pink) (not (own d white)) (not (own d blue))
					)
					(and (own a red) (own d white) (not (own d blue)) (not (own d pink))
									 (own c blue) (not (own c white)) (not (own c pink))
									 (own b pink) (not (own b white)) (not (own b blue))
					)
					(and (own a red) (own d white) (not (own d blue)) (not (own d pink))
									 (own b blue) (not (own b white)) (not (own b pink))
									 (own c pink) (not (own c white)) (not (own c blue))
					)
					(and (own a red) (own b white) (not (own b blue)) (not (own b pink))
									 (own c blue) (not (own c white)) (not (own c pink))
									 (own d pink) (not (own d white)) (not (own d blue))
					)
					(and (own a red) (own c white) (not (own c blue)) (not (own c pink))
									 (own d blue) (not (own d white)) (not (own d pink))
									 (own b pink) (not (own b white)) (not (own b blue))
					)
				)
		   )
	)

	(:constraint (True
				 )
	)

	(:goal (or (K_a (and (own a red) (own b white) (own c blue) (own d pink) ) )
			   (K_a (and (own a red) (own b white) (own d blue) (own c pink) ) )
			   (K_a (and (own a red) (own c white) (own b blue) (own d pink) ) )
			   (K_a (and (own a red) (own c white) (own d blue) (own b pink) ) )
			   (K_a (and (own a red) (own d white) (own b blue) (own c pink) ) )
			   (K_a (and (own a red) (own d white) (own c blue) (own b pink) ) )
		   )
	)
)
